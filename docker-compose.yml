version: '3'

services:

    db:
        image: mysql:latest
        restart: always
        
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASS}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASS}
            MYSQL_DATABASE: ${DB_DATABASE}
        volumes:
            - ./db_data:/var/lib/mysql
            - "./mysql/CreateTable.sql:/docker-entrypoint-initdb.d/1.sql"

        ports: 
            - "3306:3306"

    adminer:
        image: adminer
        depends_on: 
            - db
        restart: always
        ports:
            - 8080:8080
    
    users:
        image: users:${TAG:-latest}
        build:
            context: ./users-microservice/
            dockerfile: Dockerfile
        restart: always
        depends_on: 
            - db
        environment: 
            PORT: 3001
            DB_HOST: 'db'
            DB_USER : ${DB_USER}
            DB_PASS: ${DB_PASS}
            DB_DATABASE: ${DB_DATABASE}
            DB_PORT: ${DB_PORT}
            ACCES_CONTROL: 'http://localhost:3000'

        ports: 
            - "3001:3001"
    
    agenda:
        image: agenda:${TAG:-latest}
        build:
            context: ./agenda-microservice/
            dockerfile: Dockerfile
        restart: always
        depends_on: 
            - db
        environment: 
            PORT: 3002
            DB_HOST: 'db'
            DB_USER : ${DB_USER}
            DB_PASS: ${DB_PASS}
            DB_DATABASE: ${DB_DATABASE}
            DB_PORT: ${DB_PORT}
            ACCES_CONTROL: 'http://localhost:3000'

        ports: 
            - "3002:3002"
    
    events:
        image: events:${TAG:-latest}
        build:
            context: ./events-microservice/
            dockerfile: Dockerfile
        restart: always
        depends_on: 
            - db
        environment: 
            PORT: 3003
            DB_HOST: 'db'
            DB_USER : ${DB_USER}
            DB_PASS: ${DB_PASS}
            DB_DATABASE: ${DB_DATABASE}
            DB_PORT: ${DB_PORT}
            ACCES_CONTROL: 'http://localhost:3000'

        ports: 
            - "3003:3003"

    ui:
        image: ui:${TAG:-latest}
        build:
            context: ./ui/
            dockerfile: Dockerfile
        restart: always
        depends_on: 
            - users
            - events
            - agenda
        ports: 
            - "3000:80"

        